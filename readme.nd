SuperStore Sales Data Analysis:

Project Overview:
This project involves analyzing sales data from a SuperStore dataset to uncover key insights such as top-selling products, regional sales performance, and trends over time. The analysis includes data cleaning, transformation, and visualization of various business metrics to help decision-makers understand sales patterns and improve business strategy.

Dataset
The dataset SuperStoreOrders.csv includes various columns related to customer orders, including:

Order ID
Order Date
Ship Date
Region
Sales
Profit
Discount
Product Name
Quantity
And more...

The data contains both numerical and categorical fields, and we explore relationships between various business metrics like sales, profit, and regional performance.

Objective:
The main goals of this project are:

Data Cleaning: Ensure the dataset is clean and ready for analysis.
Exploratory Data Analysis (EDA): Uncover patterns and trends in sales, products, and regional performance.
Visualizations: Create clear visualizations to communicate findings effectively.
Insights: Provide actionable insights for decision-makers.

Steps in the Analysis
1. Data Loading
The dataset was loaded into a pandas DataFrame for analysis.
Initial inspection of data types and missing values was performed.

import pandas as pd
df = pd.read_csv('SuperStoreOrders.csv')

2. Data Cleaning
Converted the Order Date to datetime format.
Cleaned the Sales column by removing currency symbols and converting it to a numeric data type.
Handled missing values and ensured all relevant fields were ready for analysis.

df['Order Date'] = pd.to_datetime(df['Order Date'], errors='coerce')
df['Sales'] = pd.to_numeric(df['Sales'].replace({'\$': '', ',': ''}, regex=True), errors='coerce')

3. Sales Analysis by Region
We grouped the data by Region to analyze the total sales in each region. A bar plot was created to show which regions contributed the most to total sales.

import matplotlib.pyplot as plt
import seaborn as sns

plt.figure(figsize=(10, 5))
sns.barplot(x='Region', y='Sales', data=df)
plt.title('Total Sales by Region')
plt.ylabel('Sales')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()


4. Top 10 Products by Sales
We identified the top 10 products by total sales and visualized them using a bar plot.

top_products = df.groupby('Product Name')['Sales'].sum().nlargest(10)
plt.figure(figsize=(10, 5))
top_products.plot(kind='bar', title='Top 10 Products by Sales')
plt.ylabel('Sales')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()


5. Sales Over Time
We analyzed how sales changed over time by grouping sales data by month.

df['Order Date'] = pd.to_datetime(df['Order Date'], errors='coerce')
sales_over_time = df.groupby(df['Order Date'].dt.to_period('M'))['Sales'].sum()

plt.figure(figsize=(12, 6))
sales_over_time.plot()
plt.title('Sales Over Time')
plt.xlabel('Month')
plt.ylabel('Sales')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()


6. Discount vs Profit Analysis
We examined the relationship between discounts and profit using a scatter plot to determine if higher discounts negatively impacted profit.

plt.figure(figsize=(10, 5))
sns.scatterplot(x='Discount', y='Profit', data=df)
plt.title('Discount vs Profit')
plt.xlabel('Discount')
plt.ylabel('Profit')
plt.tight_layout()
plt.show()


Results and Insights:

Sales by Region: The West region contributed the most to sales, followed by the Central and East regions.
Top Products: The top 10 products account for a significant portion of total sales, indicating key products driving revenue.

Sales Trends: There were noticeable spikes in sales during certain months, indicating potential seasonal trends.

Discount vs Profit: A higher discount generally correlates with lower profits, suggesting a need for careful discount management.
Technologies Used

Programming Language: Python
Libraries:
pandas for data manipulation
matplotlib and seaborn for visualizations
numpy for numerical operations
Environment: Jupyter Notebook / VS Code


How to Run the Project
Clone this repository using:
git clone https://github.com/yourusername/superstore-sales-analysis.git

Install the required libraries:

pip install pandas matplotlib seaborn

#Run the Python script SuperStoreOrdersANALYSIS.py to execute the analysis and generate visualizations.


Conclusion
This project provided actionable insights into sales trends, top products, and regional performance. The visualizations help in identifying areas of improvement and potential growth.

